<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cloudinary Uploader</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .gradient-bg {
      background: linear-gradient(135deg, #6b21a8 0%, #1e40af 50%, #0c4a6e 100%);
    }
    .file-upload {
      transition: all 0.3s ease;
    }
    .file-upload:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }
    .file-upload.drag-active {
      border-color: #818cf8 !important;
      background-color: rgba(255,255,255,0.15);
    }
    .upload-icon {
      transition: all 0.5s ease;
    }
    .pop {
      display: none;
    }
    .pop.active {
      display: flex;
    }
    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-20px); }
    }
    .animate-float { animation: float 6s ease-in-out infinite; }
    .backdrop-blur-lg {
      -webkit-backdrop-filter: blur(16px);
      backdrop-filter: blur(16px);
    }
  </style>
</head>
<body class="gradient-bg min-h-screen flex items-center justify-center p-4 overflow-hidden">
  <!-- Floating decorative elements -->
  <div class="absolute w-64 h-64 rounded-full bg-purple-500/10 blur-xl top-20 left-20 animate-float"></div>
  <div class="absolute w-72 h-72 rounded-full bg-blue-500/10 blur-xl bottom-10 right-20 animate-float" style="animation-delay: 2s;"></div>

  <!-- Main Content -->
  <div class="relative z-10 text-center">
    <h1 class="text-4xl font-bold text-white mb-6">Welcome to Cloud Upload</h1>
    
    <!-- Feedback Messages -->
    <% if (typeof uploadSuccess !== 'undefined') { %>
      <div class="mb-4 p-3 bg-green-500/20 text-green-100 rounded-lg">
        File uploaded successfully!
      </div>
    <% } %>
    
    <% if (typeof error !== 'undefined') { %>
      <div class="mb-4 p-3 bg-red-500/20 text-red-100 rounded-lg">
        <%= error %>
      </div>
    <% } %>
    
    <button onclick="showPopUp()" 
            class="px-8 py-3 bg-white text-indigo-800 font-bold rounded-full hover:bg-indigo-100 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
            aria-label="Open file upload dialog">
      Upload Files
    </button>
  </div>

  <!-- Upload Popup -->
  <div class="pop fixed inset-0 z-50 items-center justify-center bg-black bg-opacity-50 px-4">
    <div class="relative w-full max-w-2xl mx-4">
      <div class="bg-white/10 backdrop-blur-lg rounded-xl shadow-2xl p-6 md:p-8 relative border-2 border-white/20">
        <button onclick="hidePopUp()" 
                class="absolute top-4 right-4 text-white text-2xl hover:text-indigo-200 transition-colors"
                aria-label="Close upload dialog">
          &times;
        </button>
        
        <div class="text-center mb-6">
          <h2 class="text-3xl font-bold text-white mb-2">Upload Files</h2>
          <p class="text-lg text-white/80">Secure cloud storage with Cloudinary</p>
        </div>
        
        <form id="uploadForm" class="file-upload group relative bg-white/5 rounded-xl border-2 border-dashed border-white/20 p-6 transition-all duration-300 hover:border-white/40">
          <label for="dropzone-file" class="flex flex-col items-center justify-center w-full cursor-pointer">
            <div class="flex flex-col items-center justify-center pt-2 pb-4">
              <svg class="upload-icon w-14 h-14 mb-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16" aria-hidden="true">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"/>
              </svg>
              <p class="mb-1 text-lg text-white"><span class="font-semibold">Click to upload</span> or drag and drop</p>
              <p class="text-xs text-white/70">Supports images and videos (MAX. 25MB)</p>
              <p id="file-feedback" class="text-sm text-white mt-2 hidden"></p>
              <div id="upload-error" class="text-red-300 text-sm mt-2 hidden"></div>
            </div>
            <input id="dropzone-file" type="file" class="hidden" accept="image/*,video/*" aria-label="File upload">
          </label>
          <div class="mt-6 flex justify-center">
            <button id="submit-btn" type="button" onclick="handleUpload()"
                    class="px-6 py-2 bg-white text-indigo-800 font-medium rounded-full hover:bg-indigo-100 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl flex items-center justify-center"
                    aria-label="Submit file upload">
              <span id="submit-text">Upload Files</span>
              <svg id="spinner" class="animate-spin h-5 w-5 ml-2 hidden" viewBox="0 0 24 24" aria-hidden="true">
                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" opacity="0.25"></circle>
                <path fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z"></path>
              </svg>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Floating particles -->
  <div class="absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none">
    <div class="absolute w-3 h-3 bg-white/30 rounded-full top-1/4 left-1/5 animate-float" style="animation-delay: 0s;"></div>
    <div class="absolute w-2 h-2 bg-white/20 rounded-full top-1/3 right-1/4 animate-float" style="animation-delay: 1s;"></div>
    <div class="absolute w-4 h-4 bg-white/40 rounded-full bottom-1/4 left-1/3 animate-float" style="animation-delay: 2s;"></div>
  </div>

  <script>
    // UI Controls
    function showPopUp() {
      document.querySelector('.pop').classList.add('active', 'flex');
      document.body.style.overflow = 'hidden';
    }
    
    function hidePopUp() {
      document.querySelector('.pop').classList.remove('active', 'flex');
      document.body.style.overflow = 'auto';
      resetForm();
    }

    function resetForm() {
      document.getElementById('dropzone-file').value = '';
      document.getElementById('file-feedback').classList.add('hidden');
      document.getElementById('upload-error').classList.add('hidden');
    }

    // File Handling
    document.getElementById('dropzone-file').addEventListener('change', function(e) {
      updateFileFeedback(e.target.files);
    });

    function updateFileFeedback(files) {
      const feedback = document.getElementById('file-feedback');
      if (files.length > 0) {
        feedback.textContent = `Selected: ${files[0].name}`;
        feedback.classList.remove('hidden');
      } else {
        feedback.classList.add('hidden');
      }
    }

    // Drag and Drop
    const dropZone = document.querySelector('.file-upload');
    const fileInput = document.getElementById('dropzone-file');

    ['dragenter', 'dragover'].forEach(event => {
      dropZone.addEventListener(event, (e) => {
        e.preventDefault();
        dropZone.classList.add('drag-active');
      });
    });

    ['dragleave', 'drop'].forEach(event => {
      dropZone.addEventListener(event, (e) => {
        e.preventDefault();
        dropZone.classList.remove('drag-active');
        if (event === 'drop') {
          fileInput.files = e.dataTransfer.files;
          updateFileFeedback(e.dataTransfer.files);
        }
      });
    });

    // Upload Handling
    async function handleUpload() {
      const fileInput = document.getElementById('dropzone-file');
      const submitBtn = document.getElementById('submit-btn');
      const submitText = document.getElementById('submit-text');
      const spinner = document.getElementById('spinner');
      const errorDisplay = document.getElementById('upload-error');
      
      if (!fileInput.files.length) {
        errorDisplay.textContent = 'Please select a file first';
        errorDisplay.classList.remove('hidden');
        return;
      }

      submitText.textContent = 'Uploading...';
      spinner.classList.remove('hidden');
      submitBtn.disabled = true;
      errorDisplay.classList.add('hidden');
      
      const formData = new FormData();
      formData.append('file', fileInput.files[0]);

      try {
        const response = await fetch('/upload', {
          method: 'POST',
          body: formData,
          headers: {
            'Accept': 'application/json'
          },
          credentials: 'include'
        });

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.message || 'Upload failed');
        }

        const data = await response.json();
        hidePopUp();
        window.location.href = '/home?uploadSuccess=true';
        
      } catch (error) {
        errorDisplay.textContent = error.message;
        errorDisplay.classList.remove('hidden');
      } finally {
        submitText.textContent = 'Upload Files';
        spinner.classList.add('hidden');
        submitBtn.disabled = false;
      }
    }

    // Close when clicking outside
    document.querySelector('.pop').addEventListener('click', function(e) {
      if (e.target === this) hidePopUp();
    });

    // Touch support for mobile
    dropZone.addEventListener('touchmove', (e) => {
      e.preventDefault();
      dropZone.classList.add('drag-active');
    }, { passive: false });
  </script>
</body>
</html>